[{"path":"https://shixiangwang.github.io/regport/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Shixiang Wang Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://shixiangwang.github.io/regport/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with regport","title":"Getting help with regport","text":"Thanks using regport! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://shixiangwang.github.io/regport/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with regport","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://shixiangwang.github.io/regport/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with regport","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://shixiangwang.github.io/regport/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with regport","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://shixiangwang.github.io/regport/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shixiang Wang. Author, maintainer.","code":""},{"path":"https://shixiangwang.github.io/regport/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang S (2022). regport: Regression Model Processing Port. https://github.com/ShixiangWang/regport, https://shixiangwang.github.io/regport/.","code":"@Manual{,   title = {regport: Regression Model Processing Port},   author = {Shixiang Wang},   year = {2022},   note = {https://github.com/ShixiangWang/regport, https://shixiangwang.github.io/regport/}, }"},{"path":"https://shixiangwang.github.io/regport/index.html","id":"regport","dir":"","previous_headings":"","what":"Regression Model Processing Port","title":"Regression Model Processing Port","text":"goal regport provides R6 classes, methods utilities construct, analyze, summarize, visualize regression models (CoxPH GLMs).","code":""},{"path":"https://shixiangwang.github.io/regport/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Regression Model Processing Port","text":"can install development version regport like :","code":"remotes::install_github(\"ShixiangWang/regport\")"},{"path":"https://shixiangwang.github.io/regport/index.html","id":"simple-case","dir":"","previous_headings":"","what":"Simple case","title":"Regression Model Processing Port","text":"basic example shows build visualize Cox model. Prepare data: Create model: can also create formula: Visualize :  Visualize nice forest plot.","code":"library(regport) library(survival)  lung = survival::lung lung$sex = factor(lung$sex) model = REGModel$new(   lung,   recipe = list(     x = c(\"age\", \"sex\"),     y = c(\"time\", \"status\")   ) ) #> Registered S3 method overwritten by 'parameters': #>   method                         from       #>   format.parameters_distribution datawizard  model #> <REGModel>    ==========  #>  #> Parameter | Coefficient |       SE |       95% CI |     z |     p #> ----------------------------------------------------------------- #> age       |        1.02 | 9.38e-03 | [1.00, 1.04] |  1.85 | 0.065 #> sex [2]   |        0.60 |     0.10 | [0.43, 0.83] | -3.06 | 0.002 #>  #> Uncertainty intervals (equal-tailed) and p values (two-tailed) computed using a #>   Wald z-distribution approximation. #> [coxph] model ========== model = REGModel$new(   lung,   recipe = Surv(time, status) ~ age + sex )  model #> <REGModel>    ==========  #>  #> Parameter | Coefficient |       SE |       95% CI |     z |     p #> ----------------------------------------------------------------- #> age       |        1.02 | 9.38e-03 | [1.00, 1.04] |  1.85 | 0.065 #> sex2      |        0.60 |     0.10 | [0.43, 0.83] | -3.06 | 0.002 #>  #> Uncertainty intervals (equal-tailed) and p values (two-tailed) computed using a #>   Wald z-distribution approximation. #> [coxph] model ========== model$plot() model$get_forest_data() #>    variable term term_label   class level level_no   n estimate          SE #> 1:      age  age        age numeric  <NA>       NA 228 1.017191 0.009381835 #> 2:      sex sex1        sex  factor     1        1 138 0.000000          NA #> 3:     <NA> sex2        sex  factor     2        2  90 0.598566 0.100234639 #>      CI    CI_low   CI_high         z df_error           p reference label #> 1: 0.95 0.9989686 1.0357467  1.848078      Inf 0.064591012     FALSE   age #> 2:   NA        NA        NA        NA       NA          NA      TRUE   sex #> 3: 0.95 0.4310936 0.8310985 -3.064760      Inf 0.002178445     FALSE  <NA> model$plot_forest()"},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class representing a regression model — REGModel","title":"R6 class representing a regression model — REGModel","text":"Contains fields storing data methods build, process visualize regression model. Currently, class designed CoxPH GLM regression models.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class representing a regression model — REGModel","text":"data data.table storing modeling data. recipe R formula storing model formula. terms terms (covariables, .e. columns) used building model. args arguments used building model. model constructed model. type model type (class). result model result, object parameters_model. Can converted data.frame .data.frame() data.table::.data.table().","code":""},{"path":[]},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class representing a regression model — REGModel","text":"REGModel$new() REGModel$get_forest_data() REGModel$plot_forest() REGModel$plot() REGModel$print()","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class representing a regression model — REGModel","text":"Build REGModel object.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$new(   data,   recipe,   ...,   f = c(\"coxph\", \"binomial\", \"gaussian\", \"Gamma\", \"inverse.gaussian\", \"poisson\",     \"quasi\", \"quasibinomial\", \"quasipoisson\"),   exp = NULL,   ci = 0.95 )"},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a regression model — REGModel","text":"data data.table storing modeling data. recipe R formula list two elements 'x' 'y', 'x' covariables 'y' label. See example detail operation. ... parameters passing corresponding regression model function. f length-1 string specifying modeling function family glm(), default 'coxph'. options members GLM family, see stats::family(). 'binomial' logistic, 'gaussian' linear. exp logical, indicating whether exponentiate coefficients. ci confidence Interval (CI) level. Default 0.95 (95%). e.g. survival::coxph().","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class representing a regression model — REGModel","text":"REGModel R6 object.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"method-get-forest-data-","dir":"Reference","previous_headings":"","what":"Method get_forest_data()","title":"R6 class representing a regression model — REGModel","text":"get tidy data plotting forest.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$get_forest_data(separate_factor = FALSE, global_p = FALSE)"},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a regression model — REGModel","text":"separate_factor separate factor/class blank row. global_p TRUE, return global p value.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"method-plot-forest-","dir":"Reference","previous_headings":"","what":"Method plot_forest()","title":"R6 class representing a regression model — REGModel","text":"plot forest.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$plot_forest(ref_line = 1, xlim = c(0, 2), ...)"},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a regression model — REGModel","text":"ref_line reference line, default 1 HR. xlim limits x axis. ... plot options passing forestploter::forest(). Also check https://github.com/adayim/forestploter see complex adjustment result plot.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"R6 class representing a regression model — REGModel","text":"print REGModel$result default plot methods see package.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$plot()"},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 class representing a regression model — REGModel","text":"print REGModel object","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a regression model — REGModel","text":"","code":"REGModel$print(...)"},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a regression model — REGModel","text":"... unused.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class representing a regression model — REGModel","text":"","code":"library(survival) test1 <- data.frame(   time = c(4, 3, 1, 1, 2, 2, 3),   status = c(1, 1, 1, 0, 1, 1, 0),   x = c(0, 2, 1, 1, 1, 0, 0),   sex = c(0, 0, 0, 0, 1, 1, 1) )  # -------------- # Build a model # --------------  # way 1: mm <- REGModel$new(   test1,   Surv(time, status) ~ x + strata(sex) ) #> Registered S3 method overwritten by 'parameters': #>   method                         from       #>   format.parameters_distribution datawizard mm #> <REGModel>    ==========  #>  #> Parameter | Coefficient |   SE |        95% CI |    z |     p #> ------------------------------------------------------------- #> x         |        2.23 | 1.83 | [0.45, 11.18] | 0.98 | 0.329 #>  #> Uncertainty intervals (equal-tailed) and p values (two-tailed) computed using a #>   Wald z-distribution approximation. #> [coxph] model ========== as.data.frame(mm$result) #>   Parameter Coefficient      SE   CI    CI_low  CI_high         z df_error #> 1         x    2.230706 1.83448 0.95 0.4450758 11.18022 0.9756088      Inf #>           p #> 1 0.3292583  # way 2: mm2 <- REGModel$new(   test1,   recipe = list(     x = c(\"x\", \"strata(sex)\"),     y = c(\"time\", \"status\")   ) ) mm2 #> <REGModel>    ==========  #>  #> Parameter | Coefficient |   SE |        95% CI |    z |     p #> ------------------------------------------------------------- #> x         |        2.23 | 1.83 | [0.45, 11.18] | 0.98 | 0.329 #>  #> Uncertainty intervals (equal-tailed) and p values (two-tailed) computed using a #>   Wald z-distribution approximation. #> [coxph] model ==========  # Add other parameters, e.g., weights # For more, see ?coxph mm3 <- REGModel$new(   test1,   recipe = list(     x = c(\"x\", \"strata(sex)\"),     y = c(\"time\", \"status\")   ),   weights = c(1, 1, 1, 2, 2, 2, 3) ) mm3$args #> $weights #> [1] 1 1 1 2 2 2 3 #>"},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 class representing a list of regression model — REGModelList","title":"R6 class representing a list of regression model — REGModelList","text":"Contains fields storing data methods build, process visualize list regression model. Currently, class designed CoxPH GLM regression models.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 class representing a list of regression model — REGModelList","text":"data data.table storing modeling data. recipe R formula storing model formula. terms terms (covariables, .e. columns) used building model. args arguments used building model. model constructed model. type model type (class). result model result, object parameters_model. Can converted data.frame .data.frame() data.table::.data.table().","code":""},{"path":[]},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 class representing a list of regression model — REGModelList","text":"REGModelList$new() REGModelList$plot() REGModelList$print()","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 class representing a list of regression model — REGModelList","text":"Build REGModel object.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"REGModelList$new(   data,   recipe,   ...,   f = c(\"coxph\", \"binomial\", \"gaussian\", \"Gamma\", \"inverse.gaussian\", \"poisson\",     \"quasi\", \"quasibinomial\", \"quasipoisson\"),   exp = TRUE,   ci = 0.95 )"},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a list of regression model — REGModelList","text":"data data.table storing modeling data. recipe R formula list two elements 'x' 'y', 'x' covariables 'y' label. See example detail operation. ... parameters passing corresponding regression model function. f length-1 string specifying modeling function family glm(), default 'coxph'. options members GLM family, see stats::family(). 'binomial' logistic, 'gaussian' linear. exp indicating whether exponentiate coefficients. ci confidence Interval (CI) level. Default 0.95 (95%). e.g. survival::coxph().","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 class representing a list of regression model — REGModelList","text":"REGModel R6 object.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"R6 class representing a list of regression model — REGModelList","text":"print REGModel result default plot methods parameters package.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"REGModelList$plot()"},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"R6 class representing a list of regression model — REGModelList","text":"print REGModel object","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"REGModelList$print(...)"},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 class representing a list of regression model — REGModelList","text":"... unused.","code":""},{"path":"https://shixiangwang.github.io/regport/reference/REGModelList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R6 class representing a list of regression model — REGModelList","text":"","code":"library(survival) test1 <- data.frame(   time = c(4, 3, 1, 1, 2, 2, 3),   status = c(1, 1, 1, 0, 1, 1, 0),   x = c(0, 2, 1, 1, 1, 0, 0),   sex = c(0, 0, 0, 0, 1, 1, 1) )"},{"path":"https://shixiangwang.github.io/regport/reference/regport-package.html","id":null,"dir":"Reference","previous_headings":"","what":"regport: Regression Model Processing Port — regport-package","title":"regport: Regression Model Processing Port — regport-package","text":"Provides R6 classes, methods utilities construct, analyze, summarize, visualize regression models.","code":""},{"path":[]},{"path":"https://shixiangwang.github.io/regport/reference/regport-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"regport: Regression Model Processing Port — regport-package","text":"Maintainer: Shixiang Wang w_shixiang@163.com (ORCID)","code":""},{"path":"https://shixiangwang.github.io/regport/news/index.html","id":"regport-0009000","dir":"Changelog","previous_headings":"","what":"regport 0.0.0.9000","title":"regport 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
