[{"path":"https://shixiangwang.github.io/regport/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Shixiang Wang Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://shixiangwang.github.io/regport/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with regport","title":"Getting help with regport","text":"Thanks using regport! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://shixiangwang.github.io/regport/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with regport","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://shixiangwang.github.io/regport/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with regport","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://shixiangwang.github.io/regport/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with regport","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://shixiangwang.github.io/regport/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shixiang Wang. Author, maintainer.","code":""},{"path":"https://shixiangwang.github.io/regport/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang S (2022). regport: Regression Model Processing Port. https://github.com/ShixiangWang/regport, https://shixiangwang.github.io/regport/.","code":"@Manual{,   title = {regport: Regression Model Processing Port},   author = {Shixiang Wang},   year = {2022},   note = {https://github.com/ShixiangWang/regport, https://shixiangwang.github.io/regport/}, }"},{"path":"https://shixiangwang.github.io/regport/index.html","id":"regport","dir":"","previous_headings":"","what":"Regression Model Processing Port","title":"Regression Model Processing Port","text":"goal regport …","code":""},{"path":"https://shixiangwang.github.io/regport/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Regression Model Processing Port","text":"can install development version regport like :","code":"# FILL THIS IN! HOW CAN PEOPLE INSTALL YOUR DEV PACKAGE?"},{"path":"https://shixiangwang.github.io/regport/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Regression Model Processing Port","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples. case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(regport) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://shixiangwang.github.io/regport/reference/regport-package.html","id":null,"dir":"Reference","previous_headings":"","what":"regport: Regression Model Processing Port — regport-package","title":"regport: Regression Model Processing Port — regport-package","text":"Provides R6 classes, methods utilities construct, analyze, summarize, visualize regression models.","code":""},{"path":[]},{"path":"https://shixiangwang.github.io/regport/reference/regport-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"regport: Regression Model Processing Port — regport-package","text":"Maintainer: Shixiang Wang w_shixiang@163.com (ORCID)","code":""},{"path":"https://shixiangwang.github.io/regport/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way. enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions). simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[. Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround. Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually : Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://shixiangwang.github.io/regport/news/index.html","id":"regport-0009000","dir":"Changelog","previous_headings":"","what":"regport 0.0.0.9000","title":"regport 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
